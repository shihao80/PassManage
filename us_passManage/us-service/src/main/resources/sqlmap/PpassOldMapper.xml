<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
* 代码为自动生成 Created by www.magicalcoder.com
* 软件作者：何栋宇 qq:709876443
* 如果你改变了此类 read 请将此行删除
*  欢迎加入官方QQ群:648595928
-->
<mapper namespace="com.passManage.us.service.ppassold.mapper.PpassOldMapper">
    <!-- PpassOld -->
    <resultMap id="resultMap" type="PpassOld">
        <id column="pass_id" property="passId"/>
        <result column="pass_name" property="passName" />
        <result column="pass_length" property="passLength" />
        <result column="pass_type" property="passType" />
        <result column="pass_childfir" property="passChildfir" />
        <result column="pass_childsec" property="passChildsec" />
        <result column="pass_childthi" property="passChildthi" />
        <result column="pass_expiry" property="passExpiry" />
        <result column="pass_createtime" property="passCreatetime" />
        <result column="pass_userid" property="passUserid" />
    </resultMap>
    <!-- 查询单个实体 -->
    <select id="getModel" parameterType="hashmap" resultMap="resultMap">
        select  <choose><when test="NotIgnore_!=null and NotIgnore_"><include refid="selectSqlNotIgnoreModel"/> </when><otherwise><include refid="selectSqlIgnoreModel"/></otherwise></choose>
        from  <include refid="tableSql"/>  where 1=1 <include refid="whereSqlModel"/> <include refid="orderGroupLimit"/>
    </select>
    <!--根据主键 查询单个实体 -->
    <select id="getModelByPk" parameterType="hashmap" resultMap="resultMap">
        select  <choose><when test="NotIgnore_!=null and NotIgnore_"><include refid="selectSqlNotIgnoreModel"/> </when><otherwise><include refid="selectSqlIgnoreModel"/></otherwise></choose>
        from  <include refid="tableSql"/>  <include refid="magicalcoderPkWhereSql"/>
    </select>
    <!-- 查询一组实体 -->
    <select id="getModelList" parameterType="hashmap" resultMap="resultMap">
        select  <choose><when test="NotIgnore_!=null and NotIgnore_"><include refid="selectSqlNotIgnoreModel"/> </when><otherwise><include refid="selectSqlIgnoreModel"/></otherwise></choose>
        from  <include refid="tableSql"/>  where 1=1 <include refid="whereSqlModel"/> <include refid="orderGroupLimit"/>
    </select>
    <!-- 查询一组实体 in 语句-->
    <select id="getModelInList" parameterType="hashmap" resultMap="resultMap">
        select  <choose><when test="NotIgnore_!=null and NotIgnore_"><include refid="selectSqlNotIgnoreModel"/> </when><otherwise><include refid="selectSqlIgnoreModel"/></otherwise></choose>
        from  <include refid="tableSql"/>  where  `pass_id` in
        <foreach item="id" index="index" collection="idList" open="(" separator="," close=")">#{id}</foreach>
        <include refid="orderGroupLimit"/>
    </select>
    <!-- 查询一组实体的数量 -->
    <select id="getModelListCount" parameterType="hashmap" resultType="int">
        select count(1)  from  <include refid="tableSql"/>  where 1=1 <include refid="whereSqlModel"/> <include refid="orderGroupLimit"/>
    </select>
    <!-- 插入单个实体 遇到入参null转换成数据库NULL-->
    <insert id="insertModel" parameterType="PpassOld"  useGeneratedKeys="true" keyProperty="passId" >
        insert into <include refid="tableSql"/> (<include refid="douFieldSql"/>) values(<include refid="douValueSql"/>)
    </insert>
    <!-- 替换单个实体 如果没有则插入 遇到入参null转换成数据库NULL-->
    <insert id="replaceModel" parameterType="PpassOld"  useGeneratedKeys="true" keyProperty="passId" >
        replace into <include refid="tableSql"/> (<include refid="douFieldSql"/>) values(<include refid="douValueSql"/>)
    </insert>
    <!-- 插入单个实体 遇到入参null转换成数据库默认值-->
    <insert id="insertModelWithoutNull" parameterType="PpassOld"  useGeneratedKeys="true" keyProperty="passId" >
        insert into <include refid="tableSql"/> (<include refid="douFieldWithoutNullSql"/>) values(<include refid="douValueWithoutNullSql"/>)
    </insert>
    <!-- 替换单个实体 如果没有则插入 遇到入参null转换成数据库默认值-->
    <insert id="replaceModelWithoutNull" parameterType="PpassOld"  useGeneratedKeys="true" keyProperty="passId" >
        replace into <include refid="tableSql"/> (<include refid="douFieldWithoutNullSql"/>) values(<include refid="douValueWithoutNullSql"/>)
    </insert>
    <!-- 批量插入一组实体 -->
    <insert id="batchInsertModel" parameterType="java.util.List"   useGeneratedKeys="true" keyProperty="passId" >
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            insert into <include refid="tableSql"/> (<include refid="batchDouFieldSql"/>) values (<include refid="batchDouValueSql"/>)
        </foreach>
    </insert>
    <!-- 批量替换一组实体 -->
    <insert id="batchReplaceModel" parameterType="java.util.List"  useGeneratedKeys="true" keyProperty="passId" >
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            replace into <include refid="tableSql"/> (<include refid="batchDouFieldSql"/>) values (<include refid="batchDouValueSql"/>)
        </foreach>
    </insert>
    <insert id="batchInsertModelWithoutNull" parameterType="java.util.List"   useGeneratedKeys="true" keyProperty="passId" >
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            insert into <include refid="tableSql"/> (<include refid="batchDouFieldWithoutNullSql"/>) values (<include refid="batchDouValueWithoutNullSql"/>)
        </foreach>
    </insert>
    <insert id="batchReplaceModelWithoutNull" parameterType="java.util.List"  useGeneratedKeys="true" keyProperty="passId" >
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            replace into <include refid="tableSql"/> (<include refid="batchDouFieldWithoutNullSql"/>) values (<include refid="batchDouValueWithoutNullSql"/>)
        </foreach>
    </insert>

        <!-- 清空表 操作危险 慎用，暂时注销掉-->
    <delete id="truncateModel">
        -- truncate table <include refid="tableSql"/>
    </delete>

    <!-- 根据主键删除一个实体 magicalCoderPrimaryKeyName 框架封装-->
    <delete id="deleteModelByPk" parameterType="hashmap">
        delete from <include refid="tableSql"/> <include refid="magicalcoderPkWhereSql"/>
    </delete>

    <delete id="deleteModelList" parameterType="hashmap">
        delete from <include refid="tableSql"/> where 1=1 <include refid="whereSqlModel"/>
    </delete>

    <!-- 批量删除实体 in 根据主键-->
    <delete id="deleteModelByIds" parameterType="java.util.Set">
        delete from <include refid="tableSql"/> where `pass_id` in <foreach item="id" index="index" collection="collection" open="(" separator="," close=")">#{id}</foreach>
    </delete>
    <!-- 更新一个实体 -->
    <update id="updateModel" parameterType="PpassOld">
        update <include refid="tableSql"/> <include refid="updateSetSql"/> <include refid="updatePkWhereSql"/>
    </update>
    <!-- 更新一个实体 仅仅当被更新的字段不为空的时候才更新，否则忽略更新-->
    <update id="updateModelWithoutNull" parameterType="PpassOld">
        update <include refid="tableSql"/> <include refid="updateSetWithoutNullSql"/> <include refid="updatePkWhereSql"/>
    </update>
     <!-- 批量更新实体 传入一组实体，分别根据主键作为查询条件-->
    <update id="batchUpdateModel" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update <include refid="tableSql"/> <include refid="batchUpdateSetSql"/> <include refid="batchUpdatePkWhereSql"/>
        </foreach>
    </update>
    <update id="batchUpdateModelWithoutNull" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update <include refid="tableSql"/> <include refid="batchUpdateWithoutNullSetSql"/> <include refid="batchUpdatePkWhereSql"/>
        </foreach>
    </update>
    <!-- sql 片段 -->
   <sql id="selectSqlIgnoreModel">
        <trim suffixOverrides=",">
            <if test="passIdIgnore_ == null or !passIdIgnore_">`pass_id`,</if>
            <if test="passNameIgnore_ == null or !passNameIgnore_">`pass_name`,</if>
            <if test="passLengthIgnore_ == null or !passLengthIgnore_">`pass_length`,</if>
            <if test="passTypeIgnore_ == null or !passTypeIgnore_">`pass_type`,</if>
            <if test="passChildfirIgnore_ == null or !passChildfirIgnore_">`pass_childfir`,</if>
            <if test="passChildsecIgnore_ == null or !passChildsecIgnore_">`pass_childsec`,</if>
            <if test="passChildthiIgnore_ == null or !passChildthiIgnore_">`pass_childthi`,</if>
            <if test="passExpiryIgnore_ == null or !passExpiryIgnore_">`pass_expiry`,</if>
            <if test="passCreatetimeIgnore_ == null or !passCreatetimeIgnore_">`pass_createtime`,</if>
            <if test="passUseridIgnore_ == null or !passUseridIgnore_">`pass_userid`</if>
        </trim>
    </sql>
    <sql id="selectSqlNotIgnoreModel">
        <trim suffixOverrides=",">
         <if test="passIdNotIgnore_ != null and passIdNotIgnore_">`pass_id`,</if>
         <if test="passNameNotIgnore_ != null and passNameNotIgnore_">`pass_name`,</if>
         <if test="passLengthNotIgnore_ != null and passLengthNotIgnore_">`pass_length`,</if>
         <if test="passTypeNotIgnore_ != null and passTypeNotIgnore_">`pass_type`,</if>
         <if test="passChildfirNotIgnore_ != null and passChildfirNotIgnore_">`pass_childfir`,</if>
         <if test="passChildsecNotIgnore_ != null and passChildsecNotIgnore_">`pass_childsec`,</if>
         <if test="passChildthiNotIgnore_ != null and passChildthiNotIgnore_">`pass_childthi`,</if>
         <if test="passExpiryNotIgnore_ != null and passExpiryNotIgnore_">`pass_expiry`,</if>
         <if test="passCreatetimeNotIgnore_ != null and passCreatetimeNotIgnore_">`pass_createtime`,</if>
         <if test="passUseridNotIgnore_ != null and passUseridNotIgnore_">`pass_userid`</if>
        </trim>
    </sql>
    <sql id="douFieldSql">
        <trim suffixOverrides=",">
            <if test="passId!=null">`pass_id`,</if> `pass_name`,`pass_length`,`pass_type`,`pass_childfir`,`pass_childsec`,`pass_childthi`,`pass_expiry`,`pass_createtime`,`pass_userid`,
        </trim>
    </sql>
    <sql id="douValueSql">
        <trim suffixOverrides=",">
                <choose><when test="passId!=null">#{passId},</when></choose>
                <choose><when test="passName!=null">#{passName},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="passLength!=null">#{passLength},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="passType!=null">#{passType},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="passChildfir!=null">#{passChildfir},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="passChildsec!=null">#{passChildsec},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="passChildthi!=null">#{passChildthi},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="passExpiry!=null">#{passExpiry,jdbcType=TIMESTAMP},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="passCreatetime!=null">#{passCreatetime,jdbcType=TIMESTAMP},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="passUserid!=null">#{passUserid},</when><otherwise>NULL,</otherwise></choose>
        </trim>
    </sql>

    <sql id="douFieldWithoutNullSql">
        <trim suffixOverrides=",">
                <if test="passId!=null">`pass_id`,</if>
                <if test="passName!=null">`pass_name`,</if>
                <if test="passLength!=null">`pass_length`,</if>
                <if test="passType!=null">`pass_type`,</if>
                <if test="passChildfir!=null">`pass_childfir`,</if>
                <if test="passChildsec!=null">`pass_childsec`,</if>
                <if test="passChildthi!=null">`pass_childthi`,</if>
                <if test="passExpiry!=null">`pass_expiry`,</if>
                <if test="passCreatetime!=null">`pass_createtime`,</if>
                <if test="passUserid!=null">`pass_userid`,</if>

        </trim>
    </sql>
    <sql id="douValueWithoutNullSql">
        <trim suffixOverrides=",">
                <choose><when test="passId!=null">#{passId},</when></choose>
                <choose><when test="passName!=null">#{passName},</when></choose>
                <choose><when test="passLength!=null">#{passLength},</when></choose>
                <choose><when test="passType!=null">#{passType},</when></choose>
                <choose><when test="passChildfir!=null">#{passChildfir},</when></choose>
                <choose><when test="passChildsec!=null">#{passChildsec},</when></choose>
                <choose><when test="passChildthi!=null">#{passChildthi},</when></choose>
                <choose><when test="passExpiry!=null">#{passExpiry,jdbcType=TIMESTAMP},</when></choose>
                <choose><when test="passCreatetime!=null">#{passCreatetime,jdbcType=TIMESTAMP},</when></choose>
                <choose><when test="passUserid!=null">#{passUserid},</when></choose>
        </trim>
    </sql>
    <sql id="batchDouFieldSql">
        <trim suffixOverrides=",">
                <if test="item.passId!=null">`pass_id`,</if> `pass_name`,`pass_length`,`pass_type`,`pass_childfir`,`pass_childsec`,`pass_childthi`,`pass_expiry`,`pass_createtime`,`pass_userid`,
        </trim>
    </sql>
    <sql id="batchDouValueSql">
        <trim suffixOverrides=",">
                <choose><when test="item.passId!=null">#{item.passId},</when></choose>
                <choose><when test="item.passName!=null">#{item.passName},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.passLength!=null">#{item.passLength},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.passType!=null">#{item.passType},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.passChildfir!=null">#{item.passChildfir},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.passChildsec!=null">#{item.passChildsec},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.passChildthi!=null">#{item.passChildthi},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.passExpiry!=null">#{item.passExpiry,jdbcType=TIMESTAMP},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.passCreatetime!=null">#{item.passCreatetime,jdbcType=TIMESTAMP},</when><otherwise>NULL,</otherwise></choose>
                <choose><when test="item.passUserid!=null">#{item.passUserid},</when><otherwise>NULL,</otherwise></choose>
        </trim>
    </sql>
    <sql id="batchDouFieldWithoutNullSql">
        <trim suffixOverrides=",">
                <if test="item.passId!=null">`pass_id`,</if>
                <if test="item.passName!=null">`pass_name`,</if>
                <if test="item.passLength!=null">`pass_length`,</if>
                <if test="item.passType!=null">`pass_type`,</if>
                <if test="item.passChildfir!=null">`pass_childfir`,</if>
                <if test="item.passChildsec!=null">`pass_childsec`,</if>
                <if test="item.passChildthi!=null">`pass_childthi`,</if>
                <if test="item.passExpiry!=null">`pass_expiry`,</if>
                <if test="item.passCreatetime!=null">`pass_createtime`,</if>
                <if test="item.passUserid!=null">`pass_userid`,</if>

        </trim>
    </sql>
    <sql id="batchDouValueWithoutNullSql">
        <trim suffixOverrides=",">
                <choose><when test="item.passId!=null">#{item.passId},</when></choose>
                <choose><when test="item.passName!=null">#{item.passName},</when></choose>
                <choose><when test="item.passLength!=null">#{item.passLength},</when></choose>
                <choose><when test="item.passType!=null">#{item.passType},</when></choose>
                <choose><when test="item.passChildfir!=null">#{item.passChildfir},</when></choose>
                <choose><when test="item.passChildsec!=null">#{item.passChildsec},</when></choose>
                <choose><when test="item.passChildthi!=null">#{item.passChildthi},</when></choose>
                <choose><when test="item.passExpiry!=null">#{item.passExpiry,jdbcType=TIMESTAMP},</when></choose>
                <choose><when test="item.passCreatetime!=null">#{item.passCreatetime,jdbcType=TIMESTAMP},</when></choose>
                <choose><when test="item.passUserid!=null">#{item.passUserid},</when></choose>
        </trim>
    </sql>
    <sql id="updateSetSql">
        <set>
                    <choose> <when test="passName!=null">`pass_name`=#{passName}</when> <otherwise> `pass_name`=NULL</otherwise> </choose>,
                    <choose> <when test="passLength!=null">`pass_length`=#{passLength}</when> <otherwise> `pass_length`=NULL</otherwise> </choose>,
                    <choose> <when test="passType!=null">`pass_type`=#{passType}</when> <otherwise> `pass_type`=NULL</otherwise> </choose>,
                    <choose> <when test="passChildfir!=null">`pass_childfir`=#{passChildfir}</when> <otherwise> `pass_childfir`=NULL</otherwise> </choose>,
                    <choose> <when test="passChildsec!=null">`pass_childsec`=#{passChildsec}</when> <otherwise> `pass_childsec`=NULL</otherwise> </choose>,
                    <choose> <when test="passChildthi!=null">`pass_childthi`=#{passChildthi}</when> <otherwise> `pass_childthi`=NULL</otherwise> </choose>,
                    <choose> <when test="passExpiry!=null">`pass_expiry`=#{passExpiry,jdbcType=TIMESTAMP}</when> <otherwise> `pass_expiry`=NULL</otherwise> </choose>,
                    <choose> <when test="passCreatetime!=null">`pass_createtime`=#{passCreatetime,jdbcType=TIMESTAMP}</when> <otherwise> `pass_createtime`=NULL</otherwise> </choose>,
                    <choose> <when test="passUserid!=null">`pass_userid`=#{passUserid}</when> <otherwise> `pass_userid`=NULL</otherwise> </choose>,
        </set>
    </sql>
    <sql id="updateSetWithoutNullSql">
        <set>
                    <choose><when test="passName!=null">`pass_name`=#{passName},</when></choose>
                    <choose><when test="passLength!=null">`pass_length`=#{passLength},</when></choose>
                    <choose><when test="passType!=null">`pass_type`=#{passType},</when></choose>
                    <choose><when test="passChildfir!=null">`pass_childfir`=#{passChildfir},</when></choose>
                    <choose><when test="passChildsec!=null">`pass_childsec`=#{passChildsec},</when></choose>
                    <choose><when test="passChildthi!=null">`pass_childthi`=#{passChildthi},</when></choose>
                    <choose><when test="passExpiry!=null">`pass_expiry`=#{passExpiry,jdbcType=TIMESTAMP},</when></choose>
                    <choose><when test="passCreatetime!=null">`pass_createtime`=#{passCreatetime,jdbcType=TIMESTAMP},</when></choose>
                    <choose><when test="passUserid!=null">`pass_userid`=#{passUserid},</when></choose>
        </set>
    </sql>
    <sql id="magicalcoderPkWhereSql">
        where 1=1
            and `pass_id` = #{magicalCoderPrimaryKeyName}
    </sql>
    <sql id="updatePkWhereSql">
        where 1=1
            and `pass_id` = #{passId}
    </sql>
    <sql id="batchUpdateSetSql">
        <set>
                    <choose> <when test="item.passName!=null">`pass_name`=#{item.passName}</when> <otherwise> `pass_name`=NULL</otherwise> </choose>,
                    <choose> <when test="item.passLength!=null">`pass_length`=#{item.passLength}</when> <otherwise> `pass_length`=NULL</otherwise> </choose>,
                    <choose> <when test="item.passType!=null">`pass_type`=#{item.passType}</when> <otherwise> `pass_type`=NULL</otherwise> </choose>,
                    <choose> <when test="item.passChildfir!=null">`pass_childfir`=#{item.passChildfir}</when> <otherwise> `pass_childfir`=NULL</otherwise> </choose>,
                    <choose> <when test="item.passChildsec!=null">`pass_childsec`=#{item.passChildsec}</when> <otherwise> `pass_childsec`=NULL</otherwise> </choose>,
                    <choose> <when test="item.passChildthi!=null">`pass_childthi`=#{item.passChildthi}</when> <otherwise> `pass_childthi`=NULL</otherwise> </choose>,
                    <choose> <when test="item.passExpiry!=null">`pass_expiry`=#{item.passExpiry,jdbcType=TIMESTAMP}</when> <otherwise> `pass_expiry`=NULL</otherwise> </choose>,
                    <choose> <when test="item.passCreatetime!=null">`pass_createtime`=#{item.passCreatetime,jdbcType=TIMESTAMP}</when> <otherwise> `pass_createtime`=NULL</otherwise> </choose>,
                    <choose> <when test="item.passUserid!=null">`pass_userid`=#{item.passUserid}</when> <otherwise> `pass_userid`=NULL</otherwise> </choose>,
        </set>
    </sql>
    <sql id="batchUpdateWithoutNullSetSql">
        <set>
                    <choose> <when test="item.passName!=null">`pass_name`=#{item.passName},</when></choose>
                    <choose> <when test="item.passLength!=null">`pass_length`=#{item.passLength},</when></choose>
                    <choose> <when test="item.passType!=null">`pass_type`=#{item.passType},</when></choose>
                    <choose> <when test="item.passChildfir!=null">`pass_childfir`=#{item.passChildfir},</when></choose>
                    <choose> <when test="item.passChildsec!=null">`pass_childsec`=#{item.passChildsec},</when></choose>
                    <choose> <when test="item.passChildthi!=null">`pass_childthi`=#{item.passChildthi},</when></choose>
                    <choose> <when test="item.passExpiry!=null">`pass_expiry`=#{item.passExpiry,jdbcType=TIMESTAMP},</when></choose>
                    <choose> <when test="item.passCreatetime!=null">`pass_createtime`=#{item.passCreatetime,jdbcType=TIMESTAMP},</when></choose>
                    <choose> <when test="item.passUserid!=null">`pass_userid`=#{item.passUserid},</when></choose>
        </set>
    </sql>
    <sql id="batchUpdatePkWhereSql">
        where 1=1
            and `pass_id` = #{item.passId}
    </sql>
    <!-- 这里可以加上数据库名称 方便的切换数据库-->
    <sql id="tableSql">
        us.p_pass_old
    </sql>

   <sql id="whereSqlModel">
        <if test="passId!=null "> and `pass_id` = #{passId}</if>
        <if test="passName!=null "> and `pass_name` = #{passName}</if>
        <if test="passLength!=null "> and `pass_length` = #{passLength}</if>
        <if test="passType!=null "> and `pass_type` = #{passType}</if>
        <if test="passChildfir!=null "> and `pass_childfir` = #{passChildfir}</if>
        <if test="passChildsec!=null "> and `pass_childsec` = #{passChildsec}</if>
        <if test="passChildthi!=null "> and `pass_childthi` = #{passChildthi}</if>
        <if test="passExpiry!=null "> and `pass_expiry` = #{passExpiry,jdbcType=TIMESTAMP}</if>
        <if test="passCreatetime!=null "> and `pass_createtime` = #{passCreatetime,jdbcType=TIMESTAMP}</if>
        <if test="passUserid!=null "> and `pass_userid` = #{passUserid}</if>
                <if test="passIdFirst!=null "> and `pass_id` <![CDATA[=]]>
                            #{passIdFirst}
                </if>
                <if test="passNameFirst!=null "> and `pass_name` <![CDATA[=]]>
                            #{passNameFirst}
                </if>
                <if test="passLengthFirst!=null "> and `pass_length` <![CDATA[=]]>
                            #{passLengthFirst}
                </if>
                <if test="passTypeFirst!=null "> and `pass_type` <![CDATA[=]]>
                            #{passTypeFirst}
                </if>
                <if test="passExpiryFirst!=null "> and `pass_expiry` <![CDATA[>=]]>
                        #{passExpiryFirst,jdbcType=TIMESTAMP}
                </if>
                <if test="passExpirySecond!=null "> and `pass_expiry` <![CDATA[<=]]>
                        #{passExpirySecond,jdbcType=TIMESTAMP}
                </if>
                <if test="passCreatetimeFirst!=null "> and `pass_createtime` <![CDATA[>=]]>
                        #{passCreatetimeFirst,jdbcType=TIMESTAMP}
                </if>
                <if test="passCreatetimeSecond!=null "> and `pass_createtime` <![CDATA[<=]]>
                        #{passCreatetimeSecond,jdbcType=TIMESTAMP}
                </if>
                <if test="passUseridFirst!=null "> and `pass_userid` <![CDATA[=]]>
                            #{passUseridFirst}
                </if>
        <!--<if test="whereSql!=null"> ${whereSql}</if>-->
    </sql>

    <sql id="safeGroupBy">
        <if test="safeGroupBy!=null and safeGroupBy!=''">
            group by
            <choose>
                <when test="safeGroupBy != null and safeGroupBy == 'pass_id'">  `pass_id` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'pass_name'">  `pass_name` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'pass_length'">  `pass_length` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'pass_type'">  `pass_type` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'pass_childfir'">  `pass_childfir` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'pass_childsec'">  `pass_childsec` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'pass_childthi'">  `pass_childthi` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'pass_expiry'">  `pass_expiry` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'pass_createtime'">  `pass_createtime` </when>
                <when test="safeGroupBy != null and safeGroupBy == 'pass_userid'">  `pass_userid` </when>
            </choose>
        </if>
    </sql>
    <sql id="safeOrderBy">
        <if test="safeOrderBy!=null and safeOrderBy!=''">
            <choose>
                <when test="safeOrderBy != null and safeOrderBy == 'pass_id desc'"> order by  `pass_id` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'pass_id asc'"> order by `pass_id` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'pass_name desc'"> order by  `pass_name` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'pass_name asc'"> order by `pass_name` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'pass_length desc'"> order by  `pass_length` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'pass_length asc'"> order by `pass_length` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'pass_type desc'"> order by  `pass_type` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'pass_type asc'"> order by `pass_type` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'pass_childfir desc'"> order by  `pass_childfir` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'pass_childfir asc'"> order by `pass_childfir` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'pass_childsec desc'"> order by  `pass_childsec` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'pass_childsec asc'"> order by `pass_childsec` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'pass_childthi desc'"> order by  `pass_childthi` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'pass_childthi asc'"> order by `pass_childthi` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'pass_expiry desc'"> order by  `pass_expiry` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'pass_expiry asc'"> order by `pass_expiry` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'pass_createtime desc'"> order by  `pass_createtime` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'pass_createtime asc'"> order by `pass_createtime` asc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'pass_userid desc'"> order by  `pass_userid` desc </when>
                <when test="safeOrderBy != null and safeOrderBy == 'pass_userid asc'"> order by `pass_userid` asc </when>
            </choose>
        </if>
    </sql>

    <sql id="orderGroupLimit">
        <include refid="safeGroupBy"/>
        <if test="notSafeGroupBy != null and notSafeGroupBy != ''"> group by ${notSafeGroupBy}</if>
        <include refid="safeOrderBy"/>
        <if test="notSafeOrderBy != null and notSafeOrderBy != ''"> order by ${notSafeOrderBy}</if>
        <if test="limit != null"> LIMIT <if test="start != null">#{start},</if>#{limit} </if>
    </sql>

</mapper>
